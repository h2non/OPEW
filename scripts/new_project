#!/bin/bash 
# 
# This code is a part of OPEW project <http://opew.sf.net>
# @description 	OPEW project setup utility
# @author	Tomas Aparicio <tomas@rijndael-project.com>
# @license	GNU GPL 3.0
# @version	Beta - 03/02/2012
# 

OPEW="/opt/opew/projects"

# check PATH environment variable
if [ -z $PATH ]; then
	echo "The PATH environment variable is empty. Cannot continue with the installation process..."
	echo "Must be defined in order to run the installer properly. "
	echo "Please, copy and ejecute this (or your customized PATH environment): " 
	echo 'export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
	exit 1
fi

# check if run as root
if [ "`id -u`" -ne 0 ];	then
       	echo "ERROR: "
	echo "You must run the installer like a root user. You can't continue..."
       	exit 1
fi

# make_index is the function to create a basic project index.html file.
function make_index
{
cat <<- _EOF_
	<html>
	<head><title>$name project</title></head>
	<body>
	<h1>Welcome to the <i>$name</i> project</h1>
	<p>This project is located at $OPEW/$name/</p> 
	<div style="position:absolute;bottom:10px;font-size:12px"><p>Powered by <a href="http://opew.sf.net">OPEW</a> | Generated by project setup utility the `date`</p></div>
	</body>
	</html>
_EOF_
} 

#	make_vhost is the function to create a config file that
#	Apache2 can interpret. The variable for the domain name is passed
# Creates a new project customized VirtualHost for Apache  
function make_vhost
{
if [ $port -ne 80 ] && [ $port -ne 443 ]; then
	virtualname='NameVirtualHost *:'$port
else 
	virtualname=''
fi

cat <<- _EOF_
	# 
	# Generated by OPEW project setup utility
	# Project name: $name
	# Project domain: $dname
	# Generation date: `date`
	#
	$virtualname
	<VirtualHost *:$port>
	        ServerAdmin $USER@localhost
	        ServerName $dname
	        ServerAlias *.$dname

	        DirectoryIndex index.html index.htm index.php
	        DocumentRoot $OPEW/$name/app/

	        ScriptAlias /cgi-bin/ $OPEW/$name/app/cgi-bin/
	        <Location /cgi-bin>
	                Options +ExecCGI
	        </Location>

	        <Directory $OPEW/$name/app/>
	                Options Indexes FollowSymLinks MultiViews
	                AllowOverride All
	                Order allow,deny
	                Allow from all
	        </Directory>

	        ErrorLog $OPEW/$name/logs/"$dname"-error.log
	        CustomLog $OPEW/$name/logs/"$dname"-access.log combined
	</VirtualHost>
_EOF_
}

# Header
#clear
echo "################################################"
echo "        OPEW project setup utility script"
echo "################################################" 
echo " "
echo "The project will be created in $OPEW "
echo " "
 
# project domain name
read -p "Enter the project name (myproject): " name
if [ -z $name ]; then
	echo "Project name is empty. Can't continue."
	exit 1
fi
echo " "

# check the project dont exists
if [ -d $OPEW/$name ]; then
        echo "Seem the project '$name' already exists in $OPEW"
	echo "Can't continue."
        exit 1
fi

echo "Project programming language:"
echo "NOTE: currently only PHP is supported for Apache/FastCGI. "
echo "This feature will be supported coming soon."
echo " "
echo "1) PHP (default)"
echo "2) Ruby"
echo "3) Node.js"
echo "4) Python"
echo "5) Perl"
echo "6) Go"
echo "7) Tcl"
echo "8) Lua"
echo " "
read -p "Type the language number (1,2,3,4,5,6,7,8): " plang
if [ -z $plang ]; then 
	plang=1
fi
case $plang in
	1|2|3|4|5|6|7|8)
		#echo " "
	;;
	*)
		echo "Invalid language selection. Can't continue."
		exit 1
	;;
esac
echo " "

# todo - project branch
#read -p "Do you want to create a project branch (develop, production, candidate)? (y|N): " branch
#if [ -z $branch ]; then
#	echo $branch
#fi

read -p "Setup an Apache VirtualHost for this project? (Y|n): " apache
if [ -z $apache ]; then
	apache=y
fi 
case $apache in
        y|Y|yes|Yes|YES)
        	# project domain name
		read -p "Enter the project domain (example.com, example.lan...): " dname
		if [ -z $dname ]; then
        		echo "Project domain name is empty. Can't continue."
        		exit 1
		fi
		read -p "Enter the VirtualHost HTTP port (80): " port
		if [ -z $port ]; then port=80; fi
		if [ $port -gt 40 ] && [ $port -lt 65536 ]; then 
			echo "HTTP VirtualHost will listen in TCP port $port"
		else 
			port=80
			echo "Invalid port number. Default will be used (80)"
		fi
		apache=1
        ;;
        *)
                echo "Invalid language selection. Can't continue."
        ;;
esac
echo " "

# Git repository
read -p "Do you want to create or import a Git repository (y|N): " git
if [z $git ]; then git=0=0 fi
if [ $git == "y" ] || [ $git == "Y" ]; then

	read -p "Do you want to clone a repository (y|N): " clone
	if [ $clone == "y" ] || [ $clone == "Y" ]; then
		read -p "Type the completE Git URI repository: " giruri
		if [ ! -z $gituri ]; then
			cd $OPEW/$name/app/
			/opt/opew/stack/git/bin/git clone $gituri > /dev/null 2>&1
			# todo -> add command return validation 
			echo " "
			echo "Cloning the Git repository..."
			echo " "
			sleep 1
			gitdone=1
		else
			echo "Empty value... continuing without repository."
		fi
	else
		read -p "Do you want to create a new git repository (y|N): " newgit
		if [ $newgit == "y" ] || [ $newgit == "y" ]; then
			cd $OPEW/$name/app/
			/opt/opew/stack/git/bin/git init  > /dev/null 2>&1
			/opt/opew/stack/git/bin/git add .  > /dev/null 2>&1
			/opt/opew/stack/git/bin/git commit -m 'First commit for the "$name" project!' > /dev/null 2>&1
			gitdone=1
			echo " "
			echo "Created new Git repository in $OPEW/$name/app/"
			echo " "
			sleep 1
		fi
	fi
	# Viewgit support
	if [ $gitdone -eq 1 ]; then
		read -p "Do you want review the Git repository via web from Viewgit? (y|N): " viewgit
		if [ $viewgit == "y" ] || [ $viewgit == "Y" ]; then
			viewgit=1
			echo "Adding repository to Viewgit..."
			echo "// Git repository for the '$name' project - Generated by OPEW project setup the `date`" >> /opt/opew/apps/viewgit/htdocs/inc/localconfig.php
			echo '$conf["projects"]["'$name'"] = array ( "repo" => "'$OPEW/$name/app/.git'");' >> /opt/opew/apps/viewgit/htdocs/inc/localconfig.php 
			sleep 0.5
			echo "You can review the repository from Viewgit via: http://(ip|hostname)/viewgit/"
			sleep 1
			echo " "
		fi
	fi
fi
echo " "

# Creating base project folder structure
echo "Creating the project folder structure..." 
mkdir -p $OPEW/$name
mkdir -p $OPEW/$name/app/
mkdir -p $OPEW/$name/logs/
mkdir -p $OPEW/$name/backup/
mkdir -p $OPEW/$name/scripts/
mkdir -p $OPEW/$name/conf/
sleep 1

echo "Assigning permissions..."
chown opew-httpd:opew-httpd $OPEW/$name/logs/
chmod 755 $OPEW/$name/logs/
sleep 1

if [ $apache -eq 1 ]; then

	make_index > $OPEW/$name/app/index.html
	echo "Creating index.html file..."
	sleep 0.5

	make_vhost > $OPEW/$name/conf/httpd-$name.conf
	echo "Generating Apache config file in $OPEW$name/conf/httpd-$name.conf..."
	sleep 0.5

	echo "Adding project to the Apache global config..."
	echo "# $name project Apache config - Generated by OPEW project setup the `date`" >> /opt/opew/stack/apache2/conf/projects.conf
	echo 'Include "'$OPEW/$name'/conf/httpd-'$name'.conf"' >> /opt/opew/stack/apache2/conf/projects.conf
	sleep 0.5

	echo " "
	read -p "Do you want to reload the Apache config? (Y|n): " reload
	if [ -z $reload ] || [ $reload == "y" ] || [ $reload == "Y" ]; then
		/opt/opew/scripts/opew restart apache
		echo " "
		echo "You can try to test your new project via http://$dname:$port"
	else
		echo "You must restart the Apache HTTP server manually for apply the project settings."
		echo "Run the following command:"
		echo "/opt/opew/scripts/opew restart apache"
	fi
	echo " "
	sleep 1
fi


echo "Project setup finished for '$name'."
echo "The project directory is $OPEW/$name/"

exit 0
